# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: 
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Deployment
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17.0.12'
        distribution: 'oracle'
        server-id: central 
        server-username: ${{ secrets.MAVEN_USERNAME }}
        server-password: ${{ secrets.MAVEN_PASSWORD }}
    - name: Import GPG Key
      run: |
        echo "${{ secrets.GPG_PRIVATE_KEY }}"
        echo "Generating private Key file"
        echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode > private-key.asc
        echo "Private Key file Generated"
        ls -la
        echo "Importing Secret Key"
        echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode | gpg --import --batch --allow-secret-key-import --yes
        echo "Completed importing Secret Key"
        echo "Allow loopback Pinentry"
        echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
        echo "Completed loopback Pinentry"
        gpgconf --reload gpg-agent 
        echo "Completed Process..."
      env:
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    - name: Upload Artifact on Failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: private-key.asc
        path: private-key.asc
    - name: Check Settings.xml
      run: cat ~/.m2/settings.xml
    - name: Check Java Version
      run: java --version
    - name: Check Maven Version
      run: mvn --version
    - name: Displaying Dependencies
      run: mvn dependency:tree
    - name: Build and Deploy packages to Maven
      run: mvn clean deploy -Dhttps.protocols=TLSv1.2 -DskipTests
      env:
        GITHUB_TOKEN: ${{ github.token }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
